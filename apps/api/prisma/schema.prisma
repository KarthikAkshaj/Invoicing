// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MANAGER
  INVESTOR
  SELLER
  PARTNER
}

enum DealStatus {
  PENDING
  DRAFT
  OPEN
  FREEZED
  CANCELLED
  FINAL
  CLOSED
}

enum SellerStatus {
  PENDING
  APPROVED
  REJECTED
}

enum LiquidStatus {
  LIQUIDABLE
  BREAKED
  COMPLETED
}

enum DealTags {
  RF
  ZC
}

model Employee {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  role     Role
  password String
}

model Seller {
  id               Int      @id @default(autoincrement())
  wolleteAddr      String   @unique
  name             String   @db.VarChar(191)
  email            String   @unique @db.VarChar(191)
  password         String
  gstNumber        String   @unique @db.VarChar(20)
  contactNumber    String   @unique
  status           SellerStatus
  refCode          String?
  logo             String
  deals            Deal[]
  created_at       DateTime @default(now())
  updated_at       DateTime @default(now())
}

model Deal {
  id                  BigInt          @id @default(autoincrement()) @db.BigInt // Custom Id from frontend
  seller              Seller          @relation(fields: [sellerId], references: [id])
  sellerId            Int
  targetAmount        Int
  minInvestmentAmount Int             @default(0)
  currentAmount       Int             @default(0)
  bill                String          @default("")
  status              DealStatus
  tags                DealTags[]
  dealAim             String
  completionDate      DateTime
  freezingDate        DateTime
  profitPercent       Int
  investors           InvestorDeals[]
  created_at          DateTime        @default(now())
}

model Investor {
  id           Int             @id @default(autoincrement())
  wolleteAddr  String          @unique
  accessString String?        
  deals        InvestorDeals[]
  created_at   DateTime        @default(now())
  updated_at   DateTime        @default(now())
}

model InvestorDeals {
  deal             Deal         @relation(fields: [dealId], references: [id])
  dealId           BigInt
  investor         Investor     @relation(fields: [investorId], references: [id])
  investorId       Int
  investmentAmount Int
  break            Boolean      @default(false)
  status           LiquidStatus @default(LIQUIDABLE)

  @@id([dealId, investorId])
}
